{"version":3,"sources":["components/Layout.js","components/Homepage.js","components/Schema.js","index.js"],"names":["module","exports","schemaMap","url","window","location","hostname","request","then","data","log","redraw","vnode","m","href","arr","oncreate","route","link","class","get","style","models","Object","keys","map","mk","model","name","concat","children","currentId","schema","schemaCache","exampleCache","example","loadSchema","attrs","id","prefix","exampleUrl","all","background","output","title","description","properties","pk","po","type","JSON","stringify","Layout","require","Homepage","Schema","root","document","getElementById","render"],"mappings":"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","file":"src.50d7b2cd.map","sourceRoot":"../src","sourcesContent":["\nmodule.exports = {\n  oninit: () => {\n    this.schemaMap = null\n\n    const url = window.location.hostname === 'localhost' ?\n      '/schema/build/map.json' : 'https://schema.opencrypto.io/build/map.json'\n\n    m.request(url).then(data => {\n      this.schemaMap = data\n      console.log('Loaded from: %s', url)\n      m.redraw()\n    })\n  },\n  view: (vnode) => {\n    return m('div', [\n      m('div', { 'style': 'padding-bottom: 5em;' },  [\n        m('nav#navbar.navbar', [\n          m('.container', [\n            m('.navbar-brand', [\n              m('a.navbar-item', { href: 'https://data.opencrypto.io/' }, [\n                m('#logo'),\n                m('#logo-text', [\n                  m('span.thin', 'Open'),\n                  'Crypto',\n                  m('span.green', 'Data'),\n                ])\n              ])\n            ]),\n            m('.navbar-menu', [\n              m('.navbar-start', [\n                m('a.navbar-item', { href: 'https://data.opencrypto.io' }, 'Homepage'), \n                m('a.navbar-item', { href: 'https://explorer.opencrypto.io' }, 'Explorer'), \n                m('a.navbar-item.current', { href: 'https://schema.opencrypto.io' }, 'Schema'), \n              ]),\n              m('.navbar-end', [\n                m('a.navbar-item', { href: '#' }, 'How to contribute?'), \n                m('a.navbar-item', { href: '#' }, 'FAQ'), \n              ])\n            ])\n          ])\n        ]),\n        m('nav#subbar.navbar', [\n          m('.container', [\n            m('.navbar-menu', [\n              m('.navbar-start', (() => {\n                let arr = [\n                  m('a.navbar-item', { href: '/', oncreate: m.route.link, class: m.route.get() === '/' ? 'selected' : null }, 'Introduction'),\n                  m('span.navbar-item', { style: 'font-size: 8px; color: silver;'  }, ' ● ')\n                ]\n                if (!this.schemaMap) {\n                  return arr\n                }\n                //console.log(schemaMap.models)\n                let models = Object.keys(this.schemaMap.models).map(mk => {\n                  let model = this.schemaMap.models[mk]\n                  let href = `/model/${mk}`\n                  return m('a.navbar-item', { href, oncreate: m.route.link, class: m.route.get() === href ? 'selected' : null }, model.name)\n                })\n                //console.log(models)\n                return arr.concat(models)\n              })())\n            ])\n          ])\n        ]),\n        m('.container', function() {\n          if (true) {\n            return m('#page', vnode.children)\n          }\n          return m('div', { style: 'padding: 2em;' }, 'Loading ..')\n        }())\n      ])\n    ])\n  }\n}\n","module.exports = {\n  view: () => {\n    return m('div', 'Homepage')\n  }\n}\n","var currentId = null\nvar schema = null\nvar schemaCache = {}\nvar exampleCache = {}\nvar example = null\n\nfunction loadSchema(vnode) {\n  currentId = vnode.attrs.id\n  const prefix = window.location.hostname === 'localhost' ?\n    '/schema' : 'https://schema.opencrypto.io'\n  const url = prefix + `/build/deref/${vnode.attrs.id}.json`\n  const exampleUrl = prefix + `/examples/models/${vnode.attrs.id}.json`\n  if (schemaCache[currentId]) {\n    schema = schemaCache[currentId]\n    example = exampleCache[currentId]\n    m.redraw()\n    return true\n  }\n  Promise.all([\n    m.request(url, { background: true }),\n    m.request(exampleUrl, { background: true }),\n  ]).then(output => {\n    console.log('Loaded from: %s', url)\n    schema = schemaCache[currentId] = output[0]\n    console.log('Loaded from: %s', exampleUrl)\n    example = exampleCache[currentId] = output[1]\n    m.redraw()\n  })\n}\n\nmodule.exports = {\n  oninit: (vnode) => {\n    currentId = vnode.attrs.id\n    loadSchema(vnode)\n  },\n  onupdate (vnode) {\n    if (vnode.attrs.id !== currentId) {\n      loadSchema(vnode)\n    }\n  },\n  view: (vnode) => {\n    if (!schema) {\n      return m('div', 'Loading ...')\n    }\n    return m('div', [\n      m('h2.title', schema.title),\n      m('.description', schema.description), \n      m('.props', Object.keys(schema.properties).map(pk => {\n        let po = schema.properties[pk]\n        return m('.custom-box', [\n          m('div', [\n            m('b', pk),\n            m('span', '   '),\n            m('i', { style: 'padding-left: 0.5em; color: #999999;' }, '{' +po.type + '}')\n          ]),\n          po.title ? m('div', { style: 'color: #999999;' }, po.title + (po.description ? ' - ' + po.description : '')) : null,\n          example && example[pk] ? m('pre.example', JSON.stringify(example[pk], null, 2)) : null,\n        ])\n      }))\n    ])\n  }\n}\n","const Layout = require('./components/Layout')\n\nconst Homepage = require('./components/Homepage')\nconst Schema = require('./components/Schema')\n\nconst root = document.getElementById('schema-explorer')\n\nm.route(root, '/', {\n  '/': { render: (vnode) => m(Layout, m(Homepage, vnode.attrs)) },\n  '/model/:id': { render: (vnode) => m(Layout, m(Schema, vnode.attrs)) }\n})\n"]}